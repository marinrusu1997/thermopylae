import { Exception } from '@marin/lib.error';
import { Libraries } from '@marin/lib.utils/dist/declarations';

const enum ErrorCodes {
	ACCOUNT_ALREADY_REGISTERED = 'ACCOUNT_ALREADY_REGISTERED',
	ACCOUNT_DISABLED = 'ACCOUNT_DISABLED',
	ACCOUNT_NOT_FOUND = 'ACCOUNT_NOT_FOUND',

	INCORRECT_CREDENTIALS = 'INCORRECT_CREDENTIALS',
	INCORRECT_PASSWORD = 'INCORRECT_PASSWORD',

	SAME_PASSWORD = 'SAME_PASSWORD',
	WEAK_PASSWORD = 'WEAK_PASSWORD',

	INVALID_CONFIG = 'INVALID_CONFIG',
	INVALID_AUTH_STEP_OUTPUT = 'INVALID_AUTH_STEP_OUTPUT',

	JWT_TTL_NOT_FOUND = 'JWT_TTL_NOT_FOUND',

	NEXT_AUTH_STEP_RESOLVING_FAILED = 'NEXT_AUTH_STEP_RESOLVING_FAILED',

	RECAPTCHA_THRESHOLD_REACHED = 'RECAPTCHA_THRESHOLD_REACHED',

	SESSION_NOT_FOUND = 'SESSION_NOT_FOUND',

	UNKNOWN_SIDE_CHANNEL = 'UNKNOWN_SIDE_CHANNEL',

	MISCONFIGURATION = 'MISCONFIGURATION'
}

function createException(code: string, message: string, data?: any): Exception {
	return new Exception(Libraries.AUTH_ENGINE, code, message, data);
}

export { ErrorCodes, createException };
