import { Library } from '@thermopylae/core.declarations';
import { Exception } from '@thermopylae/lib.exception';

const enum ErrorCodes {
	ACCOUNT_DISABLED = 'ACCOUNT_DISABLED',
	ACCOUNT_NOT_FOUND = 'ACCOUNT_NOT_FOUND',
	ACCOUNT_WITH_DUPLICATED_FIELDS = 'ACCOUNT_WITH_DUPLICATED_FIELDS',

	AUTH_STEP_MISCONFIGURATION = 'AUTH_STEP_MISCONFIGURATION',

	INCORRECT_CREDENTIALS = 'INCORRECT_CREDENTIALS',
	INCORRECT_PASSWORD = 'INCORRECT_PASSWORD',
	INCORRECT_RECAPTCHA = 'INCORRECT_RECAPTCHA',

	INVALID_DISABLED_UNTIL_VALUE = 'INVALID_DISABLED_UNTIL_VALUE',
	INVALID_PASSWORD_SIMILARITY_VALUE = 'INVALID_PASSWORD_SIMILARITY_VALUE',
	INVALID_TOKENS_LENGTH = 'INVALID_TOKENS_LENGTH',
	INVALID_AUTHENTICATION_STEP_OUTPUT = 'INVALID_AUTHENTICATION_STEP_OUTPUT',

	NO_TELEPHONE_NUMBER = 'NO_TELEPHONE_NUMBER',

	SIMILAR_PASSWORDS = 'SIMILAR_PASSWORDS',
	WEAK_PASSWORD = 'WEAK_PASSWORD',

	SESSION_NOT_FOUND = 'SESSION_NOT_FOUND',

	PWNED_PASSWORDS_API_ERROR = 'PWNED_PASSWORDS_API_ERROR',

	TWO_FACTOR_AUTH_TOKEN_ISSUED_ALREADY = 'TWO_FACTOR_AUTH_TOKEN_ISSUED_ALREADY',

	UNKNOWN_CREATE_FORGOT_PASSWORD_SESSION_SIDE_CHANNEL = 'UNKNOWN_CREATE_FORGOT_PASSWORD_SESSION_SIDE_CHANNEL'
}

/** @private */
function createException(code: string, message: string, data?: any): Exception {
	return new Exception(Library.AUTHENTICATION, code, message, data);
}

export { ErrorCodes, createException };
